    useEffect(() => {
        const elHeader = document.querySelector("#header") as HTMLElement
        console.log(elHeader)
        if (elHeader !== null) elHeader.style.opacity = "1"

        const elArticleContainer: HTMLElement | null = refArticleContainer.current
        const elIndexContainer: HTMLElement | null = refIndexContainer.current
        if (elArticleContainer === null || elIndexContainer === null) return

        const elsHeading: NodeListOf<Element> = (elArticleContainer as HTMLElement).querySelectorAll("h2, h3")
        setTitles(elsHeading)

        const observer = new IntersectionObserver((entries)=> observerCallback(entries),
            {
                root: null,
                rootMargin: "0px 0px -50% 0px",
                threshold: 1
            });

        const observerCallback = (entries: any) => {
            entries.forEach((entry: any) => {
                if (entry.isIntersecting) {
                    const elsItem: NodeListOf<Element> = (elIndexContainer as HTMLElement).querySelectorAll(".article-index-title")
                    Array.from(elsItem).forEach((elItem)=> elItem.removeAttribute("data-is-highlighted"))

                    const attrTarget: string = entry.target.getAttribute("data-title-target")
                    const elListItem = (elIndexContainer as HTMLElement).querySelector(`[data-title="${attrTarget}"]`)
                    elListItem?.setAttribute("data-is-highlighted", "")
                }
            })
        }

        Array.from(elsHeading).forEach((heading)=> observer.observe(heading))

    }, [refArticleContainer])